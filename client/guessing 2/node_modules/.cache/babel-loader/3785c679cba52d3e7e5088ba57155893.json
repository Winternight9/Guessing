{"ast":null,"code":"var _jsxFileName = \"/Users/supakorn/Desktop/client/guessing/src/Game.js\";\nimport React from 'react';\n\nfunction Game({\n  match\n}) {\n  React.useEffect(() => {\n    fetchStage();\n  }, []);\n  const [stage, setStage] = React.useState({});\n  const [answer, setAnswer] = React.useState({});\n  const [count, setCount] = React.useState(0);\n  const [stack, setStack] = React.useState(0);\n  const [left, setLeft] = React.useState(0);\n\n  function guessingcheck(char) {\n    if (stack <= 3) {\n      console.log(char);\n      console.log(answer[stack]);\n\n      if (char === answer[stack]) {\n        setStack(stack + 1);\n        setLeft(left - 1);\n      } else {\n        setCount(count + 1);\n      }\n    }\n  }\n\n  const fetchStage = async () => {\n    const fetchStage = await fetch(`http://localhost:8080/api/stage/${match.params.id}`);\n    const stage = await fetchStage.json();\n    console.log(stage);\n    setAnswer(stage.data.answer);\n    setCount(0);\n    setStack(0);\n    setLeft(4);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Guessing Game\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Please Choose A or B or C or D to guess the first character\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Answer: \", stack > 0 ? answer[0] : \"_ \", stack > 1 ? answer[1] : \"_ \", stack > 2 ? answer[2] : \"_ \", stack > 3 ? answer[3] : \"_\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Character(s)remaining: \", left), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Fail: \", count), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Choose: \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => guessingcheck('A'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => guessingcheck('B'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => guessingcheck('C'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => guessingcheck('D'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"D\"), /*#__PURE__*/React.createElement(\"p\", {\n    fontSize: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, stack === 4 ? \"YOUWIN!\" : \"\"));\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/supakorn/Desktop/client/guessing/src/Game.js"],"names":["React","Game","match","useEffect","fetchStage","stage","setStage","useState","answer","setAnswer","count","setCount","stack","setStack","left","setLeft","guessingcheck","char","console","log","fetch","params","id","json","data","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AAEvBF,EAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpBC,IAAAA,UAAU;AACX,GAFD,EAEG,EAFH;AAIA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAzB;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,KAAK,CAACO,QAAN,CAAe,EAAf,CAA3B;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBX,KAAK,CAACO,QAAN,CAAe,CAAf,CAAzB;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBb,KAAK,CAACO,QAAN,CAAe,CAAf,CAAzB;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAiBf,KAAK,CAACO,QAAN,CAAe,CAAf,CAAvB;;AAEA,WAASS,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAGL,KAAK,IAAI,CAAZ,EAAe;AACbM,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACI,KAAD,CAAlB;;AACA,UAAGK,IAAI,KAAKT,MAAM,CAACI,KAAD,CAAlB,EAA0B;AACxBC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAHD,MAII;AACFH,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACA;AACJ;;AAGD,QAAMN,UAAU,GAAG,YAAY;AAC7B,UAAMA,UAAU,GAAG,MAAMgB,KAAK,CAC3B,mCAAkClB,KAAK,CAACmB,MAAN,CAAaC,EAAG,EADvB,CAA9B;AAGA,UAAMjB,KAAK,GAAG,MAAMD,UAAU,CAACmB,IAAX,EAApB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAI,IAAAA,SAAS,CAACJ,KAAK,CAACmB,IAAN,CAAWhB,MAAZ,CAAT;AACAG,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAVD;;AAWA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYH,KAAK,GAAG,CAAR,GAAYJ,MAAM,CAAC,CAAD,CAAlB,GAAuB,IAAnC,EAAyCI,KAAK,GAAG,CAAR,GAAYJ,MAAM,CAAC,CAAD,CAAlB,GAAuB,IAAhE,EAAsEI,KAAK,GAAG,CAAR,GAAYJ,MAAM,CAAC,CAAD,CAAlB,GAAuB,IAA7F,EAAmGI,KAAK,GAAG,CAAR,GAAYJ,MAAM,CAAC,CAAD,CAAlB,GAAuB,GAA1H,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA2BM,IAA3B,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUJ,KAAV,CALJ,eAMI;AAAG,IAAA,KAAK,EAAE;AAACe,MAAAA,OAAO,EAAE;AAAV,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,IAAA,OAAO,EAAG,MAAKT,aAAa,CAAC,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPJ,eAQI;AAAQ,IAAA,OAAO,EAAG,MAAKA,aAAa,CAAC,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARJ,eASI;AAAQ,IAAA,OAAO,EAAG,MAAKA,aAAa,CAAC,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATJ,eAUI;AAAQ,IAAA,OAAO,EAAG,MAAKA,aAAa,CAAC,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAVJ,eAWI;AAAG,IAAA,QAAQ,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBJ,KAAK,KAAK,CAAV,GAAc,SAAd,GAA0B,EAA5C,CAXJ,CADA;AAeD;;AAGD,eAAeX,IAAf","sourcesContent":["import React from 'react';\n\nfunction Game({ match }) {\n  \n  React.useEffect(() => {\n    fetchStage();\n  }, []);\n\n  const [stage,setStage] = React.useState({});\n  const [answer,setAnswer] = React.useState({});\n  const [count,setCount] = React.useState(0);\n  const [stack,setStack] = React.useState(0);\n  const [left,setLeft] = React.useState(0);\n\n  function guessingcheck(char) {\n    if(stack <= 3) {\n      console.log(char);\n      console.log(answer[stack]);\n      if(char === answer[stack]){\n        setStack(stack + 1);\n        setLeft(left - 1)\n      } \n      else{\n        setCount(count + 1);\n      }\n      }\n  }\n\n\n  const fetchStage = async () => {\n    const fetchStage = await fetch(\n      `http://localhost:8080/api/stage/${match.params.id}`\n    );\n    const stage = await fetchStage.json();\n    console.log(stage)\n    setAnswer(stage.data.answer);\n    setCount(0);\n    setStack(0);\n    setLeft(4);\n  };\n  return (\n  <div>\n      <h1>Guessing Game</h1>\n      <p>Please Choose A or B or C or D to guess the first character</p>\n      <p>Answer: {stack > 0 ? answer[0]: \"_ \"}{stack > 1 ? answer[1]: \"_ \"}{stack > 2 ? answer[2]: \"_ \"}{stack > 3 ? answer[3]: \"_\"}</p>\n      <p>Character(s)remaining: {left}</p>\n      <p>Fail: {count}</p>   \n      <p style={{display :\"inline-block\"}}>Choose: </p>\n      <button onClick= {() =>guessingcheck('A')}>A</button>\n      <button onClick= {() =>guessingcheck('B')}>B</button> \n      <button onClick= {() =>guessingcheck('C')}>C</button> \n      <button onClick= {() =>guessingcheck('D')}>D</button> \n      <p fontSize={30}>{stack === 4 ? \"YOUWIN!\" : \"\"}</p>\n    </div>\n);\n}\n\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}