{"ast":null,"code":"var _jsxFileName = \"/Users/supakorn/Desktop/client/guessing/src/Game.js\";\nimport React from 'react';\n\nfunction Game({\n  match\n}) {\n  React.useEffect(() => {\n    fetchStage();\n  }, []);\n  const [stage, setStage] = React.useState({});\n  const [answer, setAnswer] = React.useState({});\n  const [count, setCount] = React.useState(0);\n  const [stack, setStack] = React.useState(0);\n  const status = [false, false, false, false];\n\n  function guessingcheck(char) {\n    if (stack < 3) {\n      console;\n\n      if (char === answer[stack]) {\n        status[stack] = true;\n        setStack(stack + 1);\n      } else {\n        setCount(count + 1);\n      }\n    }\n  }\n\n  const fetchStage = async () => {\n    const fetchStage = await fetch(`http://localhost:8080/api/stage/${match.params.id}`);\n    const stage = await fetchStage.json();\n    console.log(stage);\n    setAnswer(stage.data.answer);\n    setCount(0);\n    setStack(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Guessing Game\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Please Choose A or B or C or D to guess the first character\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Answer: \", status[0] ? answer[0] : \"_\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Character(s)remaining: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Fail: \", count), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Choose: \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => guessingcheck('A'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"A\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => guessingcheck('B'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"B\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => guessingcheck('C'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"C\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => guessingcheck('D'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"D\"));\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/supakorn/Desktop/client/guessing/src/Game.js"],"names":["React","Game","match","useEffect","fetchStage","stage","setStage","useState","answer","setAnswer","count","setCount","stack","setStack","status","guessingcheck","char","console","fetch","params","id","json","log","data","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AAEvBF,EAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpBC,IAAAA,UAAU;AACX,GAFD,EAEG,EAFH;AAIA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAzB;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,KAAK,CAACO,QAAN,CAAe,EAAf,CAA3B;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBX,KAAK,CAACO,QAAN,CAAe,CAAf,CAAzB;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBb,KAAK,CAACO,QAAN,CAAe,CAAf,CAAzB;AACA,QAAMO,MAAM,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,CAAf;;AAEA,WAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAGJ,KAAK,GAAG,CAAX,EAAc;AACZK,MAAAA,OAAO;;AACP,UAAGD,IAAI,KAAKR,MAAM,CAACI,KAAD,CAAlB,EAA0B;AACxBE,QAAAA,MAAM,CAACF,KAAD,CAAN,GAAgB,IAAhB;AACAC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAED,OAJD,MAKI;AACFD,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACA;AACJ;;AAGD,QAAMN,UAAU,GAAG,YAAY;AAC7B,UAAMA,UAAU,GAAG,MAAMc,KAAK,CAC3B,mCAAkChB,KAAK,CAACiB,MAAN,CAAaC,EAAG,EADvB,CAA9B;AAGA,UAAMf,KAAK,GAAG,MAAMD,UAAU,CAACiB,IAAX,EAApB;AACAJ,IAAAA,OAAO,CAACK,GAAR,CAAYjB,KAAZ;AACAI,IAAAA,SAAS,CAACJ,KAAK,CAACkB,IAAN,CAAWf,MAAZ,CAAT;AACAG,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GATD;;AAUA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYC,MAAM,CAAC,CAAD,CAAN,GAAYN,MAAM,CAAC,CAAD,CAAlB,GAAuB,GAAnC,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUE,KAAV,CALJ,eAMI;AAAG,IAAA,KAAK,EAAE;AAACc,MAAAA,OAAO,EAAE;AAAV,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,IAAA,OAAO,EAAG,MAAKT,aAAa,CAAC,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPJ,eAQI;AAAQ,IAAA,OAAO,EAAG,MAAKA,aAAa,CAAC,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARJ,eASI;AAAQ,IAAA,OAAO,EAAG,MAAKA,aAAa,CAAC,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATJ,eAUI;AAAQ,IAAA,OAAO,EAAG,MAAKA,aAAa,CAAC,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAVJ,CADA;AAcD;;AAGD,eAAed,IAAf","sourcesContent":["import React from 'react';\n\nfunction Game({ match }) {\n  \n  React.useEffect(() => {\n    fetchStage();\n  }, []);\n\n  const [stage,setStage] = React.useState({});\n  const [answer,setAnswer] = React.useState({});\n  const [count,setCount] = React.useState(0);\n  const [stack,setStack] = React.useState(0);\n  const status = [false,false,false,false];\n\n  function guessingcheck(char) {\n    if(stack < 3) {\n      console\n      if(char === answer[stack]){\n        status[stack] = true;\n        setStack(stack + 1);\n        \n      } \n      else{\n        setCount(count + 1);\n      }\n      }\n  }\n\n\n  const fetchStage = async () => {\n    const fetchStage = await fetch(\n      `http://localhost:8080/api/stage/${match.params.id}`\n    );\n    const stage = await fetchStage.json();\n    console.log(stage)\n    setAnswer(stage.data.answer);\n    setCount(0);\n    setStack(0);\n  };\n  return (\n  <div>\n      <h1>Guessing Game</h1>\n      <p>Please Choose A or B or C or D to guess the first character</p>\n      <p>Answer: {status[0] ? answer[0]: \"_\"}</p>\n      <p>Character(s)remaining: </p>\n      <p>Fail: {count}</p>    \n      <p style={{display :\"inline-block\"}}>Choose: </p>\n      <button onClick= {() =>guessingcheck('A')}>A</button>\n      <button onClick= {() =>guessingcheck('B')}>B</button> \n      <button onClick= {() =>guessingcheck('C')}>C</button> \n      <button onClick= {() =>guessingcheck('D')}>D</button> \n    </div>\n);\n}\n\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}